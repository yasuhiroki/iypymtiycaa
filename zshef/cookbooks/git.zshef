#!/usr/bin/env zsh

function zshef::install() {
    :
}

function zshef::install::osx() {
    zshef::util::mng::is_installed "git" || {
        zshef::util::os::mac::install "git"
    }
    my::config
    my::config::osx
    my::ghq::install
    my::hub::install::osx
}

function zshef::update() {
    :
}

function zshef::update::osx() {
    zshef::util::mng::is_installed "git" && {
        zshef::util::os::mac::update "git"
    }
    my::config
    my::config::osx
    my::ghq::update
    my::hub::update::osx
}

function my::config() {
    git config --global push.default simple
    git config --global core.autocrlf input
    echo "*~
    " > ~/.gitignore_global
    git config --global core.excludesfile ~/.gitignore_global
    git config --global rebase.autostash true
    git config --global rebase.autosquash true
    git config --global sequence.editor $(which vim)

    my::config::alias
    my::config::commit_template
}

function my::config::alias() {
    git config --global alias.ri 'rebase -i'
    # 不要なブランチをポイする
    git config --global alias.poi "!$(my::config::alias::poi)"
    # ブランチをあいまい検索してcheckoutする
    git config --global alias.fbr "!$(my::config::alias::fbr)"
    # diff を正規表現で検索
    git config --global alias.find "log -p -G"
}

function my::config::osx() {
    git config --global alias.done "!git log --pretty=format:'- [x] %s %h' origin/develop..HEAD | awk '\$0' | gtac"
}

function my::config::alias::poi() {
    echo 'git branch -D ''$(git branch --merged | grep -v '"'^*'"')'
}

function my::config::alias::fbr() {
    echo 'f() { local branches branch; branches=$(git branch --all | grep -v HEAD) && branch=$(echo "$branches" | fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) && git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##"); }; f'
}

function my::config::commit_template() {
    echo "; feature: 機能の追加
; bug: バグの修正
; style: コーディングスタイルの修正 (機能・パフォーマンスの変更は含まない)
; refactor: リファクタ
; perf: パフォーマンスの改善
; test: テストの追加・修正
; docs: ドキュメントの追加修正
; misc: その他、ビルド環境の設定変更など (docker, circleci, rubocop)" > ~/.git_commit_template.md
    git config --global commit.template ~/.git_commit_template.md
}

function my::ghq::install() {
    zshef::util::mng::is_installed "go" || {
        zshef::util::log::error "Depends golang"
        return 1
    }
    zshef::util::mng::is_installed "ghq" || {
        go get github.com/motemen/ghq
    }
    git config --global ghq.root "~/ghq"
}

function my::ghq::update() {
    zshef::util::mng::is_installed "go" || {
        zshef::util::log::error "Depends golang"
        return 1
    }
    zshef::util::mng::is_installed "ghq" && {
        go get -u github.com/motemen/ghq
    }
    git config --global ghq.root "~/ghq"
}

function my::hub::install::osx() {
    zshef::util::mng::is_installed "hub" || {
        # brew の hub は 2.9 なので 2.10 を入れたい
        go get github.com/github/hub
    }
    my::hub::config
}

function my::hub::update::osx() {
    zshef::util::mng::is_installed "hub" && {
        rm -rf ~/go/src/github.com/github/hub/ ~/go/pkg/darwin_amd64/github.com/github/hub/
        go get github.com/github/hub
    }
    my::hub::config
}

function my::hub::config() {
    local completions_dir="$HOME/.iypymtiycaa/zsh/completions/"
    mkdir -p ${completions_dir}
    curl https://raw.githubusercontent.com/github/hub/master/etc/hub.zsh_completion -o ${completions_dir}_hub

    git config --global alias.prpr '!hub pull-request -F .github/PULL_REQUEST_TEMPLATE.md --edit -a yasuhiroki -o'
    # Markdownのヘッダーがコメントアウト扱いになってしまうので
    # ref) https://github.com/github/hub/issues/1377
    git config --global core.commentchar ";"
}
