#!/usr/bin/env zsh

source ${${(%):-%N}:A:h}/docker/_func.sh

function zshef::install() {
    my::install::docker
}

function zshef::update() {
    zshef::util::mng::is_installed "node" && {
        my::config
    }
}

function my::config() {
    :
}

function my::nodejs::docker::img() {
    echo "node:alpine"
}

function my::nodejs::docker::run::cmd() {
    local v=(\
        "-i" \
        "--rm" \
        "-v $HOME/mybin/volume/nodejs/node_modules:/node_modules" \
        "-v /usr/local/lib/node_modules/npm"
    )
    echo ${v[@]}
}

function my::nodejs::docker::bin::dir() {
    echo "/usr/local/bin"
}

function my::nodejs::local::bin::dir() {
    echo "${HOME}/mybin"
}

function my::install::docker() {
    zshef::util::mng::is_installed "docker" || {
        zshef::util::log::error "Depends docker"
        return 1
    }

    my::docker::language::init \
        "$(my::nodejs::docker::img)" \
        "$(my::nodejs::docker::run::cmd)" \
        "$(my::nodejs::docker::bin::dir)" \
        "$(my::nodejs::local::bin::dir)"

    my::install::docker::common::modules

    my::config
}


function my::install::docker::common::modules() {
    zshef::util::mng::is_installed "npm" && {

        my::docker::bin::create \
            "$(my::nodejs::docker::img)" \
            "$(my::nodejs::docker::run::cmd)" \
            "$(my::nodejs::local::bin::dir)" \
            "gnpm" \
            "npm \"\${@}\""

        gnpm install \
            eslint eslint-config-airbnb \
            tslint typescript

        for b in "eslint" "tslint" "tsserver" "tsc"
        do
            my::docker::bin::create \
                "$(my::nodejs::docker::img)" \
                "$(my::nodejs::docker::run::cmd)" \
                "$(my::nodejs::local::bin::dir)" \
                "${b}" \
                "/node_modules/.bin/${b} \"\${@}\""
        done
    }
}
